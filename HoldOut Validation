x_train = train[feature_name]
y_train = train[label_name]
x_test = test[feature_name]

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = \
    train_test_split(x_train, y_train, test_size = 0.2, random_state = 5)

from sklearn.ensemble import GradientBoostingRegressor

model = GradientBoostingRegressor(n_estimators = 1000,
                                   learning_rate = 0.01,
                                   random_state = 5)
log_x_train = np.log(1 + x_train)
log_y_train = np.log(1 + y_train)
log_x_test = np.log(1 + x_test)
log_y_test = np.log(1 + y_test)
model.fit(log_x_train, log_y_train)


y_train_predict = model.predict(log_x_train)
y_test_predict = model.predict(log_x_test)

train_score = np.sqrt(((log_y_train - y_train_predict) ** 2).sum() / len(y_train))
test_score = np.sqrt(((log_y_test - y_test_predict) ** 2).sum() / len(y_test))


f"train = {train_score:.6f}, test = {test_score:.6f}"


## Evaluation method = RMSLE
